-- test-run result file version 2
test_run = require('test_run').new()
 | ---
 | ...

errinj = box.error.injection
 | ---
 | ...

-- Make each checkpoint trigger garbage collection.
default_checkpoint_count = box.cfg.checkpoint_count
 | ---
 | ...
box.cfg{checkpoint_count = 1}
 | ---
 | ...

-- Temporarily block compaction execution.
errinj.set('ERRINJ_VY_COMPACTION_DELAY', true)
 | ---
 | - ok
 | ...

-- Trigger compaction of a space.
s = box.schema.create_space('test', {engine = 'vinyl'})
 | ---
 | ...
_ = s:create_index('primary', {parts = {1, 'unsigned'}, run_count_per_level = 1})
 | ---
 | ...
s:insert{1, 'some data'}
 | ---
 | - [1, 'some data']
 | ...
box.snapshot()
 | ---
 | - ok
 | ...
s:replace{1, 'some other data'}
 | ---
 | - [1, 'some other data']
 | ...
box.snapshot()
 | ---
 | - ok
 | ...

-- Wait for compaction to start.
test_run:wait_cond(function() return box.stat.vinyl().scheduler.tasks_inprogress > 0 end)
 | ---
 | - true
 | ...

-- Drop the space and trigger garbage collection.
s:drop()
 | ---
 | ...
box.snapshot()
 | ---
 | - ok
 | ...

-- Resume compaction and wait for it to finish.
errinj.set('ERRINJ_VY_COMPACTION_DELAY', false)
 | ---
 | - ok
 | ...
test_run:wait_cond(function() return box.stat.vinyl().scheduler.tasks_inprogress == 0 end)
 | ---
 | - true
 | ...

-- Bump lsn and rotate vylog - should work fine.
box.space._schema:delete('no_such_key')
 | ---
 | ...
box.snapshot()
 | ---
 | - ok
 | ...

box.cfg{checkpoint_count = default_checkpoint_count}
 | ---
 | ...
