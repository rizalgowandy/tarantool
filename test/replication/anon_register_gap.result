-- test-run result file version 2
test_run = require('test_run').new()
 | ---
 | ...

--
-- When master's registering an anonymous replica, it might ignore the replica's
-- current vclock, and skip the data in range (replica_clock, master_clock).
--
box.schema.user.grant('guest', 'replication')
 | ---
 | ...
_ = box.schema.space.create('test')
 | ---
 | ...
_ = box.space.test:create_index('pk')
 | ---
 | ...

test_run:cmd('create server replica with rpl_master=default,\
              script="replication/anon1.lua"')
 | ---
 | - true
 | ...
test_run:cmd('start server replica')
 | ---
 | - true
 | ...

test_run:wait_lsn('replica', 'default')
 | ---
 | ...
box.error.injection.set('ERRINJ_RELAY_SEND_DELAY', true)
 | ---
 | - ok
 | ...

box.space.test:insert{1}
 | ---
 | - [1]
 | ...

test_run:switch('replica')
 | ---
 | - true
 | ...

test_run:wait_upstream(1, {status='disconnected'})
 | ---
 | - true
 | ...
box.space.test:select{}
 | ---
 | - []
 | ...

fiber = require('fiber')
 | ---
 | ...
f = fiber.new(function() box.cfg{replication_anon=false} end)
 | ---
 | ...
test_run:wait_upstream(1, {status='register'})
 | ---
 | - true
 | ...

test_run:switch('default')
 | ---
 | - true
 | ...
box.error.injection.set('ERRINJ_RELAY_SEND_DELAY', false)
 | ---
 | - ok
 | ...
box.space.test:insert{2}
 | ---
 | - [2]
 | ...

test_run:switch('replica')
 | ---
 | - true
 | ...
test_run:wait_lsn('replica', 'default')
 | ---
 | ...
f:status()
 | ---
 | - dead
 | ...
box.space.test:select{}
 | ---
 | - - [1]
 |   - [2]
 | ...

-- Cleanup
test_run:switch('default')
 | ---
 | - true
 | ...
test_run:cmd('stop server replica')
 | ---
 | - true
 | ...
test_run:cmd('delete server replica')
 | ---
 | - true
 | ...
box.space.test:drop()
 | ---
 | ...
box.schema.user.revoke('guest', 'replication')
 | ---
 | ...
